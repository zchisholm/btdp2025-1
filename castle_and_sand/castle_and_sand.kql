// Castle and Sand
// Section 1

Employees
| count

// Q3
Employees
| where ip_addr == "10.10.2.1"
// Preston Lane - preston_lane@castleandsand.com - prlane - 6S7W-MACHINE

// Q4
Employees
| where name == "Jacqueline Henderson"
// jacqueline_henderson@castleandsand.com - 10.10.0.66 - 4UNT-DESKTOP

Email
| where recipient == "jacqueline_henderson@castleandsand.com"

// Q5
Email
| where sender has "sunandsandtrading.com"
| distinct sender
| count

// Q6
Employees
| where name == "Cristin Genao"
// 10.10.0.141 - cristin_genao@castleandsand.com - K7DG-LAPTOP

OutboundNetworkEvents
| where src_ip == "10.10.0.141"
| distinct url

// Q7
PassiveDns
| where domain contains "shark"
| distinct domain
// There is a diffreence between what t contains and has finds

//Q8
PassiveDns
| where domain contains "shark"

// Q9
let k_usernames =
Employees
| where name has "Karen"
| distinct ip_addr;
OutboundNetworkEvents
| where src_ip in (k_usernames)
| distinct url


// Section 2
// Q1
// sharknadorules_gang@onionmail.org 

// Q2
// SUNNYDAY123329JA0

// Q4 - Q5
FileCreationEvents
| where filename has "PAY_UP_OR_SWIM_WITH_THE_FISHES.txt"
| distinct hostname

// Q6 -Q8
let infected=
FileCreationEvents
| where filename has "PAY_UP_OR_SWIM_WITH_THE_FISHES.txt"
| distinct hostname;
Employees
| where hostname in (infected)
| where role has "IT" and ip_addr has ".46"
// Simeon Kakpovi - simeon_kakpovi@castleandsand.com - 10.10.0.46 - T6YP-MACHINE

let impact_hosts = FileCreationEvents
| where filename == 'PAY_UP_OR_SWIM_WITH_THE_FISHES.txt'
| distinct hostname;
SecurityAlerts
| where description has_any (impact_hosts)

// Q10 - Q11
let impact_hosts = FileCreationEvents
| where filename == 'PAY_UP_OR_SWIM_WITH_THE_FISHES.txt'
| distinct hostname;
let helpdesk_hostnames = Employees
| where hostname in (impact_hosts)
| where role contains "IT Helpdesk"
| distinct hostname;
SecurityAlerts
| where description has_any (helpdesk_hostnames)
// 6S7W-MACHINE

Employees
| where hostname == "6S7W-MACHINE"
// Preston Lane


// Q12 - Q14
FileCreationEvents
| where hostname == "6S7W-MACHINE" and filename == "Chomping-Schedule_Changes.xlsx"
// 2023-05-26T09:26:15Z

// Q15
FileCreationEvents
| where filename == "Chomping-Schedule_Changes.xlsx"
| distinct hostname

// Q16 - Q17
OutboundNetworkEvents
| where url has "Chomping-Schedule_Changes.xlsx"


// Q18
PassiveDns
| where domain == "jawfin.com"
| distinct ip

// Q19
// 193.248.75.126

// Q20
PassiveDns
| where domain == "sharkfin.com"
| distinct ip

// Q21 -Q22
let malicious_ips = 
PassiveDns
| where domain == "sharkfin.com" or domain == "jawfin.com"
| distinct ip;
InboundNetworkEvents
| where src_ip in (malicious_ips)

// Q23
let malicious_ips = 
PassiveDns
| where domain == "sharkfin.com" or domain == "jawfin.com"
| distinct ip;
AuthenticationEvents
| where src_ip in (malicious_ips)

// Q24
Email
| where link has "sharkfin.com" or link has "jawfin.com"

// Q25 - Q26
// 2023-05-25T16:33:09Z - legal.sand@verizon.com

// Q27
Email
| where sender == "legal.sand@verizon.com"

// Q28
let bad_emails =
Email
| where sender == "legal.sand@verizon.com"
| distinct reply_to;
Email
| where sender in (bad_emails) or recipient in (bad_emails) or reply_to in (bad_emails)

// Q29
let bad_emails =
Email
| where sender == "legal.sand@verizon.com"
| distinct reply_to;
Email
| where sender in (bad_emails) or recipient in (bad_emails) or reply_to in (bad_emails)
| distinct link

// Q30
let bad_emails =
Email
| where sender == "legal.sand@verizon.com"
| distinct reply_to;
let urls =
Email
| where sender in (bad_emails) or recipient in (bad_emails) or reply_to in (bad_emails)
| distinct link;
let domains = 
urls
| extend Host = tostring(parse_url(link).Host) 
| distinct Host;
let bad_ips =
PassiveDns
| where domain in (domains)
| distinct ip;
// Q31
AuthenticationEvents
| where src_ip in (bad_ips)

// Q32
// Unique file names
let bad_emails =
Email
| where sender == "legal.sand@verizon.com"
| distinct reply_to;
Email
| where sender in (bad_emails) or recipient in (bad_emails) or reply_to in (bad_emails)
| distinct link

// Q33 - Q34
let bad_emails =
Email
| where sender == "legal.sand@verizon.com"

// Somehow lost all my work up to section 3 quesion 11

// all I could save... smh
let bad_emails = 
Email
| where sender == "legal.sand@verizon.com"
| distinct reply_to;

let urls = 
Email
| where sender in (bad_emails) or recipient in (bad_emails) or reply_to in (bad_emails)
| distinct link;

let domains = 
urls
| extend Host = parse_url(link).Host
| distinct Host;



let bad_emails =
Email
| where sender == "legal.sand@verizon.com"
| distinct reply_to;
let urls =
Email
| where sender in (bad_emails) or recipient in (bad_emails) or reply_to in (bad_emails)
| distinct link;
let domains = 
urls
| extend Host = parse_url(link).Host
| distinct Host;
PassiveDns
| where domain in (domains)


// Redoing some of my missing work
// Q33 - Q34
let bad_emails =
Email
| where sender == "legal.sand@verizon.com"
| distinct reply_to;
let file_names =
Email
| where sender in (bad_emails) or recipient in (bad_emails) or reply_to in (bad_emails)
| distinct link
| extend FileName = extract(@"[^/]+$", 0, link)
| distinct FileName; 
FileCreationEvents
| where filename has_any (file_names)


// Q35
let bad_emails =
Email
| where sender == "legal.sand@verizon.com"
| distinct reply_to;
let file_names =
Email
| where sender in (bad_emails) or recipient in (bad_emails) or reply_to in (bad_emails)
| distinct link
| extend FileName = extract(@"[^/]+$", 0, link)
| distinct FileName; 
let hosts =
FileCreationEvents
| where filename has_any (file_names)
| distinct hostname;
ProcessEvents
| where hostname has_any (hosts)

// Q36 - Q37
let bad_emails =
Email
| where sender == "legal.sand@verizon.com"
| distinct reply_to;
let file_names =
Email
| where sender in (bad_emails) or recipient in (bad_emails) or reply_to in (bad_emails)
| distinct link
| extend FileName = extract(@"[^/]+$", 0, link)
| distinct FileName; 
let hosts =
FileCreationEvents
| where filename has_any (file_names)
| distinct hostname;
ProcessEvents
| where hostname has_any (hosts)
| where timestamp > datetime(2023-05-25T16:43:20Z)
// 220.35.180.137 - CL8Q-LAPTOP

// Q42
ProcessEvents
| where process_commandline has "powershell.exe -nop -w hidden"

// Q45
let pp = 
ProcessEvents
| where process_commandline has "powershell.exe -nop -w hidden"
| distinct parent_process_name;
ProcessEvents
| where  parent_process_name has_any (pp)


// Section 3
// Q4
// 10016 from onion mail website

// Q12 - Q13
let pp = 
ProcessEvents
| where process_commandline has "powershell.exe -nop -w hidden"
| distinct parent_process_name;
ProcessEvents
| where  parent_process_name has_any (pp)
| distinct parent_process_hash
// 21ff279ba30d227e32e63cb388bf8c2d21c4fd7e935b3087088579b29e56d81d
//af99dea461d36b775235a107c7ea94a2b457851ef62d0ed6f0c50fb5131c8c8b 
// aa48acaef62a7bfb3192f8a7d6e5229764618ac1ad1bd1b5f6d19a78864eb31f
// 4874d336c5c7c2f558cfd5954655cacfc85bcfcb512a45fb0ff461ce9c38b86d - Good one
// 7ef2cc079afe7927b78be493f0b8a735a3258bc82801a11bc7b420a72708c250
// b99d114b267ffd068c3289199b6df95a9f9e64872d6c2b666d63974bbce75bf2
// d18aa84b7bf0efde9c6b5db2a38ab1ec9484c59c5284c0bd080f5197bf9388b0
// 82a7241d747864a8cf621f226f1446a434d2f98435a93497eafb48b35c12c180 - Q14
// f77077777b0cd9edd693b87cbaaaefe73436395192a2b77a841b2d5bd9b088e8
// all but one were bad

// Seciton 4
// Q1
Email
| where sender == "castleandsand_official@outlook.com"
| count

// Q2
let sub =
Email
| where sender == "castleandsand_official@outlook.com"
| distinct subject;
let bad_senders =
Email
| where subject has_any (sub)
| distinct sender;
Email
| where sender has_any (bad_senders)
// Other bad sender - castleandsandlegaldepartment@gmail.com

// Q3
let sub =
Email
| where sender == "castleandsand_official@outlook.com"
| distinct subject;
let bad_senders =
Email
| where subject has_any (sub)
| distinct sender;
Email
| where sender has_any (bad_senders)
| distinct link
// counted manuallay - ans 4

// Q4


// Q5
let sub =
Email
| where sender == "castleandsand_official@outlook.com"
| distinct subject;
let bad_senders =
Email
| where subject has_any (sub)
| distinct sender;
let recipients =
Email
| where sender has_any (bad_senders)
| distinct recipient;
let ips =
Employees
| where email_addr has_any (recipients)
| distinct role
| count

// Q6
let sub =
Email
| where sender == "castleandsand_official@outlook.com"
| distinct subject;
let bad_senders =
Email
| where subject has_any (sub)
| distinct sender;
let recipients =
Email
| where sender in (bad_senders)
| distinct recipient;
let ips =
Employees
| where email_addr in (recipients)
| distinct ip_addr;
let trg_users =
Employees
| where ip_addr in (ips)
| distinct username;
let internal =
Employees
| distinct ip_addr;
AuthenticationEvents
| where src_ip !in (internal) and result has "Successful Login" and username in (trg_users)
| distinct src_ip

// Q7
let sub =
Email
| where sender == "castleandsand_official@outlook.com"
| distinct subject;
let bad_senders =
Email
| where subject has_any (sub)
| distinct sender;
let recipients =
Email
| where sender in (bad_senders)
| distinct recipient;
let ips =
Employees
| where email_addr in (recipients)
| distinct ip_addr;
let trg_users =
Employees
| where ip_addr in (ips)
| distinct username;
let internal =
Employees
| distinct ip_addr;
let outside_ips = 
AuthenticationEvents
| where src_ip !in (internal) and result has "Successful Login" and username in (trg_users)
| distinct src_ip;
InboundNetworkEvents
| where src_ip in (outside_ips)
| where url has "download=true"
| extend FileName = extract(@"[^=]+$", 0, url)
| distinct FileName

// Q8
let sub =
Email
| where sender == "castleandsand_official@outlook.com"
| distinct subject;
let bad_senders =
Email
| where subject has_any (sub)
| distinct sender;
let recipients =
Email
| where sender in (bad_senders)
| distinct recipient;
let ips =
Employees
| where email_addr in (recipients)
| distinct ip_addr;
let trg_users =
Employees
| where ip_addr in (ips)
| distinct username;
let internal =
Employees
| distinct ip_addr;
let outside_ips = 
AuthenticationEvents
| where src_ip !in (internal) and result has "Successful Login" and username in (trg_users)
| distinct src_ip;
InboundNetworkEvents
| where src_ip in (outside_ips)
| where url has "download=true"
| extend FileName = extract(@"[^=]+$", 0, url)
| distinct src_ip

// Q9
let sub =
Email
| where sender == "castleandsand_official@outlook.com"
| distinct subject;
let bad_senders =
Email
| where subject has_any (sub)
| distinct sender;
let recipients =
Email
| where sender in (bad_senders)
| distinct recipient;
let ips =
Employees
| where email_addr in (recipients)
| distinct ip_addr;
let trg_users =
Employees
| where ip_addr in (ips)
| distinct username;
let internal =
Employees
| distinct ip_addr;
let mal_ips =
AuthenticationEvents
| where src_ip !in (internal) and result has "Successful Login" and username in (trg_users)
| distinct src_ip;
PassiveDns
| where ip in (mal_ips)
| distinct domain

// Q10
let sub =
Email
| where sender == "castleandsand_official@outlook.com"
| distinct subject;
let bad_senders =
Email
| where subject has_any (sub)
| distinct sender;
let recipients =
Email
| where sender in (bad_senders)
| distinct recipient;
let ips =
Employees
| where email_addr in (recipients)
| distinct ip_addr;
let trg_users =
Employees
| where ip_addr in (ips)
| distinct username;
let internal =
Employees
| distinct ip_addr;
AuthenticationEvents
| where src_ip !in (internal) and result has "Successful Login" and username in (trg_users)
| distinct src_ip

// Q11
let sub =
Email
| where sender == "castleandsand_official@outlook.com"
| distinct subject;
let bad_senders =
Email
| where subject has_any (sub)
| distinct sender;
let recipients =
Email
| where sender in (bad_senders)
| distinct recipient;
let ips =
Employees
| where email_addr in (recipients)
| distinct ip_addr;
let trg_users =
Employees
| where ip_addr in (ips)
| distinct username;
let internal =
Employees
| distinct ip_addr;
let outside_ips = 
AuthenticationEvents
| where src_ip !in (internal) and result has "Successful Login" and username in (trg_users)
| distinct src_ip;
let fn =
InboundNetworkEvents
| where src_ip in (outside_ips)
| where url has "download=true"
| extend FileName = extract(@"[^=]+$", 0, url)
| distinct FileName;
FileCreationEvents
| where path has "email.zip"


FileCreationEvents

// Section 5
// Q1
// 43.185.57.65, 43.185.57.65, 215.168.239.75, 156.155.83.236, 192.91.130.34, 190.198.227.17, 223.9.222.59, 124.138.210.88, 195.242.92.76
// 124.138.210.88 - South Korea
// 43.185.57.65 - China (Beiging Olympics) - Q2



// Section 6
// Q1
// kc7cyber - just searched online

// Q2
// webyteyourdata - you can see it in section 3 Q1

// Q3
// JARM Fingerprinting
// https://kc7cyber.com/blog/jarm-fingerprinting

// Q4
// Dai Wok Foods

// Q8
// What cybersecurity conference is focused on Detection Engineering And Threat Hunting
// Deathcon.io

// Q9
// Sluethcon -google

// Q10
// https://www.rapid7.com/blog/post/2023/06/14/etr-cve-2023-34362-moveit-vulnerability-timeline-of-events/
// Movit - cve-2023-34362

// Q11
// Anonymous Sudan